{"ast":null,"code":"var _jsxFileName = \"/Users/maxwellknight/Desktop/web-projects/react-training/src/componenets/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport '../css/navbar.css';\nimport mandala from \"../images/mandala.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  _s();\n\n  const {\n    data,\n    toggle\n  } = props;\n  const [isMobile, changeIsMobile] = useState(false);\n  /* change isMobile  */\n\n  function toggleIsMobile() {\n    if (!isMobile) {\n      slideEffect('navigation', 'move-out-view', 'slide-in');\n    } else {\n      const nav = document.querySelector('.navigation');\n      nav.classList.remove('.slide-in');\n      nav.classList.add('.slide-out');\n      console.log(nav);\n    }\n\n    changeIsMobile(prevIsMobile => !prevIsMobile);\n  }\n\n  function slideEffect(element, setter, effectToApply) {\n    const navMobile = document.querySelector(`.${element}`);\n    navMobile.classList.toggle(setter);\n    setTimeout(() => navMobile.classList.toggle(effectToApply), 1);\n    console.log(isMobile);\n  }\n  /**\n   * printNav is responsible for printing the navigation in relation\n   * to the viewport mobile/desktop\n   */\n\n\n  function printNav() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleIsMobile,\n        className: \"navigation-bar\",\n        icon: faBars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: isMobile ? \"nav-list-mobile\" : \"navigation-list\",\n        children: [isMobile ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"close-nav\",\n          icon: faWindowClose,\n          onClick: toggleIsMobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this) : \"\", data.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: isMobile ? \"nav-item-mobile\" : \"navigation-item\",\n            onClick: () => {\n              changeIsMobile(true);\n              toggleIsMobile();\n              return toggle(false, item.id);\n            },\n            children: item.title\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  function css(element, styleToApply) {\n    for (const property in styleToApply) element.style[property] = styleToApply[property];\n  }\n  /** this function handles the openening the of the nav menu */\n\n\n  function handleOnNavClick() {\n    return console.log(\"Menu Clicked\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"navigation-logo\",\n      src: mandala,\n      alt: \"logo\",\n      onClick: () => toggle(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), printNav()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"kzANG/zPnQ+V8zs5VjgWW+kTxaA=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faBars","faWindowClose","mandala","Navbar","props","data","toggle","isMobile","changeIsMobile","toggleIsMobile","slideEffect","nav","document","querySelector","classList","remove","add","console","log","prevIsMobile","element","setter","effectToApply","navMobile","setTimeout","printNav","map","item","id","title","css","styleToApply","property","style","handleOnNavClick"],"sources":["/Users/maxwellknight/Desktop/web-projects/react-training/src/componenets/Navbar.js"],"sourcesContent":["import {React, useState} from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {  faBars, faWindowClose } from \"@fortawesome/free-solid-svg-icons\"\nimport '../css/navbar.css'\nimport mandala from \"../images/mandala.png\"\n\nexport default function Navbar(props){\n\n    const { data , toggle } = props\n    const [isMobile, changeIsMobile] = useState(false)\n\n    /* change isMobile  */\n    function toggleIsMobile(){\n        if(!isMobile) {\n            slideEffect('navigation', 'move-out-view', 'slide-in')\n        } else{ \n            const nav = document.querySelector('.navigation')\n            nav.classList.remove('.slide-in')\n            nav.classList.add('.slide-out')\n            console.log(nav)\n        }\n        changeIsMobile(prevIsMobile => !prevIsMobile)\n    }\n\n    function slideEffect(element,setter, effectToApply){\n        const navMobile = document.querySelector(`.${element}`)\n        navMobile.classList.toggle(setter)\n        setTimeout(() => navMobile.classList.toggle(effectToApply), 1)\n        console.log(isMobile)\n    }\n    /**\n     * printNav is responsible for printing the navigation in relation\n     * to the viewport mobile/desktop\n     */\n    function printNav(){\n        return (\n            <>\n                <FontAwesomeIcon onClick={toggleIsMobile} className=\"navigation-bar\" icon={faBars}/>\n                <ul className={isMobile ? \"nav-list-mobile\": \"navigation-list\"  }>\n                    {isMobile ? <FontAwesomeIcon className=\"close-nav\" icon={faWindowClose} onClick={toggleIsMobile}/> : \"\"}\n                    {data.map(item => {\n                        return (\n                            <li className={isMobile ?  \"nav-item-mobile\" : \"navigation-item\"} key={item.id} onClick={() => {\n                                \n                                changeIsMobile(true)\n                                toggleIsMobile()\n                                return toggle(false, item.id)\n                            \n                            }}>{item.title}</li>)\n                    })}\n                </ul>\n            </>\n        )\n    }\n    function css(element, styleToApply){\n        for(const property in styleToApply)\n            element.style[property] = styleToApply[property]\n    }\n\n    /** this function handles the openening the of the nav menu */\n    function handleOnNavClick(){\n\n        return(\n            console.log(\"Menu Clicked\")\n        )\n    }\n    \n\n    return (\n        <nav className=\"navigation\">\n            <img className=\"navigation-logo\" src={mandala} alt=\"logo\" onClick={() => toggle(true)} />\n            {printNav()}\n        </nav>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}