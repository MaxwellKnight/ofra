{"ast":null,"code":"var _jsxFileName = \"/Users/maxwellknight/Desktop/web-projects/react-training/src/componenets/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport '../css/navbar.css';\nimport mandala from \"../images/mandala.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  _s();\n\n  const {\n    data,\n    toggle\n  } = props;\n  const [isMobile, changeIsMobile] = useState(false);\n  /* change isMobile  */\n\n  function toggleIsMobile() {\n    const mobileNav = document.querySelector('.nav-list-mobile');\n    mobileNav.classList.add('nav-list-mobile-enter');\n    console.log(mobileNav);\n    changeIsMobile(prevIsMobile => !prevIsMobile);\n  }\n  /**\n   * printNav is responsible for printing the navigation in relation\n   * to the viewport mobile/desktop\n   */\n\n\n  function printNav() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: isMobile ? \"nav-list-mobile\" : \"navigation-list\",\n      children: [isMobile ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"close-nav\",\n        icon: faWindowClose,\n        onClick: toggleIsMobile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this) : \"\", data.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: isMobile ? \"nav-item-mobile\" : \"navigation-item\",\n          onClick: () => {\n            changeIsMobile(false);\n            return toggle(false, item.id);\n          },\n          children: item.title\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  function css(element, styleToApply) {\n    for (const property in styleToApply) element.style[property] = styleToApply[property];\n  }\n  /** this function handles the openening the of the nav menu */\n\n\n  function handleOnNavClick() {\n    return console.log(\"Menu Clicked\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"navigation-logo\",\n      src: mandala,\n      alt: \"logo\",\n      onClick: () => toggle(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      onClick: toggleIsMobile,\n      className: \"navigation-bar\",\n      icon: faBars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), printNav()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"kzANG/zPnQ+V8zs5VjgWW+kTxaA=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faBars","faWindowClose","mandala","Navbar","props","data","toggle","isMobile","changeIsMobile","toggleIsMobile","mobileNav","document","querySelector","classList","add","console","log","prevIsMobile","printNav","map","item","id","title","css","element","styleToApply","property","style","handleOnNavClick"],"sources":["/Users/maxwellknight/Desktop/web-projects/react-training/src/componenets/Navbar.js"],"sourcesContent":["import {React, useState} from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {  faBars, faWindowClose } from \"@fortawesome/free-solid-svg-icons\"\nimport '../css/navbar.css'\nimport mandala from \"../images/mandala.png\"\n\nexport default function Navbar(props){\n\n    const { data , toggle } = props\n    const [isMobile, changeIsMobile] = useState(false)\n\n    /* change isMobile  */\n    function toggleIsMobile(){\n        const mobileNav = document.querySelector('.nav-list-mobile')\n        mobileNav.classList.add('nav-list-mobile-enter')\n        console.log(mobileNav)\n        changeIsMobile(prevIsMobile => !prevIsMobile)\n    }\n    /**\n     * printNav is responsible for printing the navigation in relation\n     * to the viewport mobile/desktop\n     */\n    function printNav(){\n        return (\n            <ul className={isMobile ? \"nav-list-mobile\": \"navigation-list\"  }>\n                {isMobile ? <FontAwesomeIcon className=\"close-nav\" icon={faWindowClose} onClick={toggleIsMobile}/> : \"\"}\n                {data.map(item => {\n                    return (\n                        <li className={isMobile ?  \"nav-item-mobile\" : \"navigation-item\"} key={item.id} onClick={() => {\n                            \n                            changeIsMobile(false)\n                            return toggle(false, item.id)\n                        \n                        }}>{item.title}</li>)\n                })}\n            </ul>\n        )\n    }\n    function css(element, styleToApply){\n        for(const property in styleToApply)\n            element.style[property] = styleToApply[property]\n    }\n\n    /** this function handles the openening the of the nav menu */\n    function handleOnNavClick(){\n\n        return(\n            console.log(\"Menu Clicked\")\n        )\n    }\n    \n\n    return (\n        <nav className=\"navigation\">\n            <img className=\"navigation-logo\" src={mandala} alt=\"logo\" onClick={() => toggle(true)} />\n            <FontAwesomeIcon onClick={(toggleIsMobile)} className=\"navigation-bar\" icon={faBars}/>\n            {printNav()}\n        </nav>\n    )\n}"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAUC,MAAV,EAAkBC,aAAlB,QAAuC,mCAAvC;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;EAAA;;EAEjC,MAAM;IAAEC,IAAF;IAASC;EAAT,IAAoBF,KAA1B;EACA,MAAM,CAACG,QAAD,EAAWC,cAAX,IAA6BV,QAAQ,CAAC,KAAD,CAA3C;EAEA;;EACA,SAASW,cAAT,GAAyB;IACrB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;IACAF,SAAS,CAACG,SAAV,CAAoBC,GAApB,CAAwB,uBAAxB;IACAC,OAAO,CAACC,GAAR,CAAYN,SAAZ;IACAF,cAAc,CAACS,YAAY,IAAI,CAACA,YAAlB,CAAd;EACH;EACD;AACJ;AACA;AACA;;;EACI,SAASC,QAAT,GAAmB;IACf,oBACI;MAAI,SAAS,EAAEX,QAAQ,GAAG,iBAAH,GAAsB,iBAA7C;MAAA,WACKA,QAAQ,gBAAG,QAAC,eAAD;QAAiB,SAAS,EAAC,WAA3B;QAAuC,IAAI,EAAEN,aAA7C;QAA4D,OAAO,EAAEQ;MAArE;QAAA;QAAA;QAAA;MAAA,QAAH,GAA4F,EADzG,EAEKJ,IAAI,CAACc,GAAL,CAASC,IAAI,IAAI;QACd,oBACI;UAAI,SAAS,EAAEb,QAAQ,GAAI,iBAAJ,GAAwB,iBAA/C;UAAgF,OAAO,EAAE,MAAM;YAE3FC,cAAc,CAAC,KAAD,CAAd;YACA,OAAOF,MAAM,CAAC,KAAD,EAAQc,IAAI,CAACC,EAAb,CAAb;UAEH,CALD;UAAA,UAKID,IAAI,CAACE;QALT,GAAuEF,IAAI,CAACC,EAA5E;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CARA,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAcH;;EACD,SAASE,GAAT,CAAaC,OAAb,EAAsBC,YAAtB,EAAmC;IAC/B,KAAI,MAAMC,QAAV,IAAsBD,YAAtB,EACID,OAAO,CAACG,KAAR,CAAcD,QAAd,IAA0BD,YAAY,CAACC,QAAD,CAAtC;EACP;EAED;;;EACA,SAASE,gBAAT,GAA2B;IAEvB,OACIb,OAAO,CAACC,GAAR,CAAY,cAAZ,CADJ;EAGH;;EAGD,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAiC,GAAG,EAAEd,OAAtC;MAA+C,GAAG,EAAC,MAAnD;MAA0D,OAAO,EAAE,MAAMI,MAAM,CAAC,IAAD;IAA/E;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,eAAD;MAAiB,OAAO,EAAGG,cAA3B;MAA4C,SAAS,EAAC,gBAAtD;MAAuE,IAAI,EAAET;IAA7E;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKkB,QAAQ,EAHb;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GArDuBf,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}